<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://RussellWestBrank.github.io</id>
    <title>Gridea</title>
    <updated>2020-02-27T11:54:42.492Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://RussellWestBrank.github.io"/>
    <link rel="self" href="https://RussellWestBrank.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://RussellWestBrank.github.io/images/avatar.png</logo>
    <icon>https://RussellWestBrank.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[HTML、CSS学习笔记]]></title>
        <id>https://RussellWestBrank.github.io/post/htmlcss-xue-xi-bi-ji/</id>
        <link href="https://RussellWestBrank.github.io/post/htmlcss-xue-xi-bi-ji/">
        </link>
        <updated>2020-02-26T08:48:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="插件"><strong>插件</strong></h1>
<p>easy less(css样式结构更清晰）live Server(浏览器同步，避免重复刷新）)</p>
<p>vs color picker(颜色拾取）</p>
<h1 id="html"><strong>HTML</strong></h1>
<p>http（协议）</p>
<p>Localhost=www.baidu.com(域名）</p>
<h3 id="form表单"><strong>FORM表单</strong></h3>
<p>1.如果要被正确提交每个输入字段必须设置一个name属性</p>
<p>2.placeholder</p>
<p>placeholder 属性规定用以描述输入字段预期值的提示（样本值或有关格式的简短描述）。</p>
<p>该提示会在用户输入值之前显示在输入字段中。</p>
<h3 id="html5">HTML5</h3>
<p>画布？？？</p>
<h1 id="css"><strong>CSS</strong></h1>
<h3 id="第一天"><strong>第一天</strong></h3>
<p>1.样式的之间的互相导入：@import url(&quot;&quot;);</p>
<p>2.选择器</p>
<p>​     ——nth-child(-n+2) 前两个</p>
<p>​     ——h1:nth-of-type(2) 第二个h1  （伪类选择器）</p>
<h3 id="第二天"><strong>第二天</strong></h3>
<p>1.表单制作（明天实操）</p>
<p>2.css权重可叠加 ID:0100 CLASS、属性选择器：0010  标签：0001</p>
<p>3.通用CSS（字体，字体大小）一般用html{} 不用**{}    因为**的权重为0继承的权重为NULL影响后续继承</p>
<h3 id="第三天"><strong>第三天</strong></h3>
<p>1.字体大小 单位px，％=em（相对于父级）</p>
<p>2.字体颜色 #000000，rgba(红，绿，蓝，透明度）</p>
<p>3.行高 单位px，em倍数（常用）***</p>
<p>word文档能做的CSS基本都能做</p>
<h3 id="第四天"><strong>第四天</strong></h3>
<p>1.上下边距不是叠加而是取最大值</p>
<p>例 ul&gt;li</p>
<p>2.行元素？？？块级元素？？？</p>
<h3 id="第五天"><strong>第五天</strong></h3>
<p>1.文字环绕图片效果——图片一定要是有透明度的png图片</p>
<p>可以直接用形状代替</p>
<h3 id="第六天"><strong>第六天</strong></h3>
<p>1.未设置宽高的情况下可通过点位来设置尺寸</p>
<p>2.多级点位，参考最近的父级</p>
<p>3.定位定的是中心点</p>
<p>4.由于加浮动后子级元素不占空间位，所以父级的高度无法随子级变化</p>
<p>解决方案：A.给父级加overflow清除浮动,产生BFC机制</p>
<p>​                   B.在父元素内部最后面添加一个没有高度的了元素，并使用clear:both 。</p>
<h3 id="第七天"><strong>第七天</strong></h3>
<p>1.字无法居中（偏上下）可以试试改变行高</p>
<p>2.鼠标放上去有小手:cursor：pointer</p>
<h3 id="第八天"><strong>第八天</strong></h3>
<p>1.定位：相对定位，绝对定位，粘性定位（如果同级叠加不同级顶走：标题），固定定位（固定在整个页面，导航栏、二维码、广告）</p>
<p>2.颜色渐变例子： background:linear-gradient(to bottom,#f3f3f3,#ddd,#f3f3f3); 白灰白 #ccc 又比#ddd白</p>
<h3 id="第九天弹性盒模型"><strong>第九天(弹性盒模型)</strong></h3>
<ol>
<li>
<h5 id="displayflexdisplayinline-flex类似于行级块应用较少">display:flex（display:inline-flex类似于行级块，应用较少）</h5>
<p>​        作用：让当前元素形成弹性盒，控制子元素（灵活元素）的布局。<br>
​        特点：<br>
​            a:在弹性盒里面的子元素,都能直接设置宽高。<br>
​            b:弹性盒子里面的子元素，都是沿着“主轴”排列。  默认情况下X轴为“主轴”<br>
​            c:让单一一个子元素在弹性盒里面左右上下居中。直接给子元素添加margin:auto即可。</p>
</li>
<li>
<h5 id="flex-direction">flex-direction</h5>
<p>​        作用：改变主轴的排列方向<br>
​        属性值：<br>
​            row   X轴为主轴<br>
​            column    Y轴为主轴<br>
​            row-reverse   X轴为主轴,反向排列<br>
​            column-reverse   Y轴为主轴，反向排列</p>
</li>
<li>
<h5 id="flex-wrap">flex-wrap</h5>
<p>​        作用：控制弹性元素溢出换行处理</p>
<p>​         属性值：</p>
<p>​              a.nowrap   不换行（默认）</p>
<p>​              b.wrap        换行</p>
<p>​              c.wrap-reverse    反向换行</p>
<p>​        特点：宽、高不够皆可换行</p>
</li>
<li>
<h5 id="flex-flow">flex-flow</h5>
<p>​        作用：合并flex-direction、flex-wrap</p>
<p>​         属性值：</p>
<p>​               a.direction+wrap</p>
</li>
<li>
<h5 id="justify-content">justify-content</h5>
<p>​        作用：控制元素在主轴上的排列方式</p>
<p>​        属性值：</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>flex-start</td>
<td>从主轴起始段开始排列</td>
</tr>
<tr>
<td>flex-end</td>
<td>从主轴末端开始排列</td>
</tr>
<tr>
<td>center</td>
<td>在主轴居中</td>
</tr>
<tr>
<td>space-between</td>
<td>第一个元素靠起点，最后一个元素靠终点，余下元素平均分配空间</td>
</tr>
<tr>
<td>space-around</td>
<td>每个元素两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍</td>
</tr>
<tr>
<td>space-evenly</td>
<td>元素间距离平均分配</td>
</tr>
</tbody>
</table>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://RussellWestBrank.github.io/post/hello-gridea/</id>
        <link href="https://RussellWestBrank.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>